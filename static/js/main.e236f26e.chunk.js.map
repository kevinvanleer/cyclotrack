{"version":3,"sources":["cyclotrack-app.svg","screenshot-summary.jpg","screenshot-dash-ble.jpg","screenshot-details-1.jpg","screenshot-details-2.jpg","screenshot-details-3.jpg","screenshot-details-4.jpg","components/DonateButton.js","Home.js","Privacy.js","App.js","reportWebVitals.js","index.js"],"names":["DonateButton","action","method","target","type","name","value","src","border","title","alt","width","height","Home","flexDirection","backgroundColor","color","padding","minHeight","maxWidth","className","href","rel","alignItems","logo","fontSize","justifyContent","marginBetween","summary","dash","detailsTop","detailsTwo","detailsThree","detailsFour","to","Privacy","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e236f26e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cyclotrack-app.822f0f32.svg\";","export default __webpack_public_path__ + \"static/media/screenshot-summary.9e1b427c.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-dash-ble.ecf682ce.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-details-1.1ed19eaf.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-details-2.61c12eec.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-details-3.41415b1c.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-details-4.d16d5f2b.jpg\";","import React from 'react';\n\nexport const DonateButton = () => (\n  <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_top\">\n    <input type=\"hidden\" name=\"business\" value=\"WPGW6AGCD6XP2\" />\n    <input type=\"hidden\" name=\"no_recurring\" value=\"0\" />\n    <input\n      type=\"hidden\"\n      name=\"item_name\"\n      value=\"Support development of Cyclotrack\"\n    />\n    <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n    <input\n      type=\"image\"\n      src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\"\n      border=\"0\"\n      name=\"submit\"\n      title=\"PayPal - The safer, easier way to pay online!\"\n      alt=\"Donate with PayPal button\"\n    />\n    <img\n      alt=\"\"\n      border=\"0\"\n      src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\"\n      width=\"1\"\n      height=\"1\"\n    />\n  </form>\n);\n","import React from 'react';\nimport './App.css';\nimport logo from './cyclotrack-app.svg';\nimport summary from './screenshot-summary.jpg';\nimport dash from './screenshot-dash-ble.jpg';\nimport detailsTop from './screenshot-details-1.jpg';\nimport detailsTwo from './screenshot-details-2.jpg';\nimport detailsThree from './screenshot-details-3.jpg';\nimport detailsFour from './screenshot-details-4.jpg';\nimport { DonateButton } from './components/DonateButton';\nimport { Flexbox, Text, Link, Icon, Spacer } from 'kvl-react-ui';\nimport { Link as RouterLink } from 'react-router-dom';\n\nfunction Home() {\n  return (\n    <Flexbox\n      flexDirection=\"column\"\n      backgroundColor=\"#282c34\"\n      color=\"#eee\"\n      padding=\"1em 1em 0 1em\"\n      height=\"100%\"\n      minHeight=\"100vh\"\n    >\n      <Flexbox flexDirection=\"column\" maxWidth=\"80ch\" height=\"100%\">\n        <Link\n          className=\"App-link\"\n          href=\"https://play.google.com/store/apps/details?id=com.kvl.cyclotrack\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          color=\"#669e58\"\n        >\n          <Flexbox flexDirection=\"column\" alignItems=\"center\">\n            <img width=\"50%\" src={logo} alt=\"logo\" />\n            <Text fontSize=\"4em\">Cyclotrack</Text>\n            <Spacer height=\"2em\" />\n            <Text>Download Cyclotrack from the Google Play Store</Text>\n          </Flexbox>\n        </Link>\n        <Spacer height=\"3em\" />\n        <Flexbox\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          marginBetween=\"30px\"\n        >\n          <img width=\"25%\" src={summary} alt=\"summary view screenshot\" />\n          <img width=\"25%\" src={dash} alt=\"dashboard screenshot\" />\n          <img width=\"25%\" src={detailsTop} alt=\"details screenshot\" />\n        </Flexbox>\n        <Spacer height=\"3em\" />\n        I started Cyclotrack because I could not find a free cycle computer app\n        that provided an always-on dashboard with relevant performance data. I\n        also wanted to build an app that was functional using only onboard\n        sensors, primarily GPS. And finally, I wanted a record of my past rides\n        so I could track progress toward my goals and compare with past\n        performance.\n        <Spacer height=\"1em\" />\n        As I developed and tested Cyclotrack, the shortcomings of smartphone GPS\n        became apparent. The relatively low speed of cycling (compared to\n        driving), shaded bike paths, buildings, and even cloudy days seemed to\n        make tracking speed frustrating and unreliable. As a result I added\n        support for Bluetooth Low Engery (BLE) heart rate, speed, and cadence\n        sensors. This added a new level of fidelity to the data available to\n        Cyclotrack, providing a much more reliable source for speed data and\n        adding the ability to track pedaling cadence. Tracking heart rate\n        provided a missing piece of information crucial to understanding how\n        much effort I was expending on my rides. Over time, I was able to\n        identify my optimal heart rate for pushing myself without burning out.\n        <Spacer height=\"1em\" />\n        I wanted to have rich data analysis without relying on cloud services or\n        third-party integrations with platforms like Strava or Google Fit, so\n        Cyclotrack provides detailed ride analysis with, maps, graphs, and stats\n        for each ride. This data is stored efficiently on your device, and can\n        be exported to XLSX format so you can do your own analysis in your\n        favorite spreadsheet application. Cyclotrack is fully functional\n        offline, no network connection is required to utilize any of its\n        features. Your data is safe. I do not collect any data or analytics\n        (although I may collect anonymous app usage data in the future) and I do\n        not send or sell any data to third parties.\n        <Spacer height=\"1em\" />\n        Having said all that, I wanted to track all my fitness activity in a\n        single experience, so I built an integration between Cyclotrack and\n        Google Fit. This integration enables Cyclotrack to send data to Google\n        Fit so that my rides contribute to my heart points, calories, miles, and\n        active minutes. Cyclotrack rides also appear in the Google Fit journal.\n        There was another reason I wanted this integration. Until this point I\n        had been entering my weight in Google Fit for a historical record, and\n        Cyclotrack so that my weight could be used to help estimate calorie burn\n        on my rides. I updated Cyclotrack to read all relevant (and available)\n        biometric data from Google Fit. Cyclotrack reads height, weight, and\n        resting heart rate data from Google Fit. It uses this information, along\n        with BLE heart rate data (if available), to estimate calorie burn. The\n        best part is that this feature is totally optional. Cyclotrack is 100%\n        functional even if you do not use Google Fit.\n        <Spacer height=\"3em\" />\n        <Flexbox\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          marginBetween=\"10px\"\n        >\n          <img width=\"23%\" src={detailsTop} alt=\"details screenshot with map\" />\n          <img\n            width=\"23%\"\n            src={detailsTwo}\n            alt=\"details screenshot with graphs\"\n          />\n          <img\n            width=\"23%\"\n            src={detailsThree}\n            alt=\"details screenshot with splits\"\n          />\n          <img\n            width=\"23%\"\n            src={detailsFour}\n            alt=\"details screenshot with elevation chart\"\n          />\n        </Flexbox>\n        <Spacer height=\"3em\" />\n        <h3>Become a beta tester</h3>\n        <Link\n          color=\"#669e58\"\n          className=\"App-link\"\n          href=\"https://play.google.com/apps/testing/com.kvl.cyclotrack\"\n        >\n          Join beta testing from the web\n        </Link>\n        <Link\n          color=\"#669e58\"\n          className=\"App-link\"\n          href=\"https://play.google.com/store/apps/details?id=com.kvl.cyclotrack\"\n        >\n          Join beta testing from Google Play on Android\n        </Link>\n        <Spacer height=\"2em\" />\n        <h3>Support Cyclotrack development</h3>\n        <DonateButton />\n        <Spacer height=\"2em\" />\n        <Link\n          color=\"#669e58\"\n          className=\"App-link\"\n          href=\"https://github.com/kevinvanleer/cyclotrack\"\n        >\n          Check out the source code on GitHub\n        </Link>\n        <Spacer height=\"2em\" />\n        <RouterLink\n          color=\"#669e58\"\n          className=\"App-link\"\n          to=\"/privacy\"\n          href=\"/privacy\"\n        >\n          View Privacy policy\n        </RouterLink>\n        <Spacer height=\"2em\" />\n      </Flexbox>\n    </Flexbox>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport logo from './cyclotrack-app.svg';\nimport { Flexbox, Text, Link, Icon, Spacer } from 'kvl-react-ui';\nimport { Link as RouterLink } from 'react-router-dom';\n\nfunction Privacy() {\n  return (\n    <Flexbox\n      flexDirection=\"column\"\n      backgroundColor=\"#282c34\"\n      color=\"#eee\"\n      padding=\"1em 1em 0 1em\"\n      height=\"100%\"\n      minHeight=\"100vh\"\n    >\n      <Flexbox flexDirection=\"column\" maxWidth=\"80ch\" height=\"100%\">\n        <RouterLink to=\"/\">\n          <img width=\"20%\" src={logo} alt=\"logo\" />\n        </RouterLink>\n        <Spacer height=\"3em\" />\n        <h3>Privacy Policy</h3>\n        Cyclotrack uses location data from GPS receiver on a user device to\n        visualize speed, distance, and map a route. All data collected by\n        Cyclotrack is stored on the device. None of your location or fitness\n        data is transmitted from the device to the developer of Cyclotrack. No\n        data is transmitted to a third party unless you explicitly enable a\n        third party integration (e.g. Google Fit).\n        <h4>Google Fit</h4>A user may link Cyclotrack with a Google Fit account.\n        This is done by signing in to a Google account in Cyclotrack settings.\n        When linked Cyclotrack will:\n        <ul>\n          <li>\n            Read height, weight, and resting heart rate stored in Google Fit.\n            This data will be used to assist in calculating metrics like calorie\n            burn. This data will be stored in Cyclotrack as part of a ride. The\n            data will persist until the ride is deleted from Cyclotrack.\n          </li>\n          <li>\n            Send data to Google Fit to be entered in the activity journal and\n            used to track toward Google Fit goals. These include: location,\n            distance, speed, cadence, and heart rate.\n          </li>\n        </ul>\n        No data received from Google Fit will be shared with or transmitted to\n        any third party.\n        <Spacer height=\"1em\" />\n        <span>\n          <i>\n            <b>Disclosure:</b> Use and transfer to any other app of information\n            received from Google APIs by Cyclotrack will adhere to the{' '}\n            <Link href=\"https://developers.google.com/terms/api-services-user-data-policy\">\n              Google API Services User Data Policy\n            </Link>\n            , including the Limited Use requirements.\n          </i>\n        </span>\n        <h4>Strava</h4>A user may connect Cyclotrack to Strava for the purpose\n        of uploading data collected during cycling activities from Cyclotrack to\n        Strava. To start uploading data to Strava, login to Strava from\n        Cyclotrack settings. Data sent to Strava includes: GPS location, heart\n        rate, speed, and cadence. It also includes notes and comments made on\n        the ride. Data uploaded to Strava cannot be deleted from Cyclotrack and\n        must be deleted using the Strava app. To stop uploading data to Strava,\n        use the logout option in Cyclotrack settings.\n        <h4>Google Analytics</h4>Cyclotrack uses Google Analytics to help\n        understand user behavior and improve the overall user experience. The\n        Advertising ID and the Secure Settings Android ID (SSAID) are not\n        collected. You may opt out of analytics collection at any time by\n        disabling &quot;Data collection&quot; in app settings.\n        <Spacer height=\"2em\" />\n      </Flexbox>\n    </Flexbox>\n  );\n}\n\nexport default Privacy;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './Home.js';\nimport Privacy from './Privacy.js';\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/privacy\">\n          <Privacy />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}