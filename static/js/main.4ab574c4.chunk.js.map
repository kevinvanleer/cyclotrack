{"version":3,"sources":["cyclotrack-app.svg","screenshot-summary.jpg","screenshot-dash-ble.jpg","screenshot-details-1.jpg","screenshot-details-2.jpg","screenshot-details-3.jpg","screenshot-details-4.jpg","Home.js","Privacy.js","App.js","reportWebVitals.js","index.js"],"names":["Home","flexDirection","backgroundColor","color","padding","height","minHeight","maxWidth","className","href","target","rel","alignItems","width","src","logo","alt","fontSize","justifyContent","marginBetween","summary","dash","detailsTop","detailsTwo","detailsThree","detailsFour","to","Privacy","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ab574c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cyclotrack-app.822f0f32.svg\";","export default __webpack_public_path__ + \"static/media/screenshot-summary.9e1b427c.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-dash-ble.ecf682ce.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-details-1.1ed19eaf.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-details-2.61c12eec.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-details-3.41415b1c.jpg\";","export default __webpack_public_path__ + \"static/media/screenshot-details-4.d16d5f2b.jpg\";","import React from 'react';\nimport './App.css';\nimport logo from './cyclotrack-app.svg';\nimport summary from './screenshot-summary.jpg';\nimport dash from './screenshot-dash-ble.jpg';\nimport detailsTop from './screenshot-details-1.jpg';\nimport detailsTwo from './screenshot-details-2.jpg';\nimport detailsThree from './screenshot-details-3.jpg';\nimport detailsFour from './screenshot-details-4.jpg';\nimport { Flexbox, Text, Link, Icon, Spacer } from 'kvl-react-ui';\nimport { Link as RouterLink } from 'react-router-dom';\n\nfunction Home() {\n  return (\n    <Flexbox\n      flexDirection=\"column\"\n      backgroundColor=\"#282c34\"\n      color=\"#eee\"\n      padding=\"1em 1em 0 1em\"\n      height=\"100%\"\n      minHeight=\"100vh\"\n    >\n      <Flexbox flexDirection=\"column\" maxWidth=\"80ch\" height=\"100%\">\n        <Link\n          className=\"App-link\"\n          href=\"https://play.google.com/store/apps/details?id=com.kvl.cyclotrack\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          color=\"#669e58\"\n        >\n          <Flexbox flexDirection=\"column\" alignItems=\"center\">\n            <img width=\"50%\" src={logo} alt=\"logo\" />\n            <Text fontSize=\"4em\">Cyclotrack</Text>\n            <Spacer height=\"2em\" />\n            <Text>Download Cyclotrack from the Google Play Store</Text>\n          </Flexbox>\n        </Link>\n        <Spacer height=\"3em\" />\n        <Flexbox\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          marginBetween=\"30px\"\n        >\n          <img width=\"25%\" src={summary} alt=\"logo\" />\n          <img width=\"25%\" src={dash} alt=\"logo\" />\n          <img width=\"25%\" src={detailsTop} alt=\"logo\" />\n        </Flexbox>\n        <Spacer height=\"3em\" />\n        I started Cyclotrack because I could not find a cycle computer app that\n        provided an always-on dashboard with relevant performance data. I also\n        wanted to build an app that was functional using only onboard sensors,\n        primarily GPS. And finally, I wanted a record of my past rides so I\n        could track progress toward my goals and compare performance to past\n        rides.\n        <Spacer height=\"1em\" />\n        As I developed Cyclotrack, the shortcomings of smartphone GPS became\n        apparent. The relatively low speed of cycling, shaded bike paths,\n        buildings and even cloudy days seemed to make tracking instantaneous\n        speed frustrating and unreliable. As a result I added support for\n        Bluetooth Low Engery (BLE) heart rate, speed and cadence sensors. This\n        added a new level of fidelity to the data available Cyclotrack,\n        providing a much more reliable source for speed data and adding the\n        ability to track pedaling cadence. Tracking heart rate provided a\n        missing piece of information that helped me understand how much effort I\n        was expending on my rides, when I was overdoing it, when I had more to\n        give, and enabled me to push myself and keep my heart rate just under my\n        functional threshold.\n        <Spacer height=\"1em\" />\n        I wanted to have rich data analysis without relying on cloud storage or\n        third part integrations with platforms like Strava or Google Fit, so\n        Cyclotrack provides details analysis with, maps, graphs and stats for\n        each ride. This data is stored efficiently on your device, and can be\n        exported to XLSX format so you can do your own analysis in your favorite\n        spreadsheet application. Cyclotrack is fully functional offline, no\n        network connection is required to utilize any of its features. Your data\n        is safe. I do not collect any data or analytics (although I may collect\n        anonymous app usage data in the future) and I do not send or sell any\n        data to third parties.\n        <Spacer height=\"1em\" />\n        Having said all that, I wanted to track all my fitness activity in a\n        single experience, so I built an integration between Cyclotrack and\n        Google Fit. This integration enables Cyclotrack to send data to Google\n        Fit so that I get credit for heart points. calories, miles, and minutes.\n        Cyclotrack rides also appear in the Google Fit journal. There was\n        another reason I wanted this integration. I wanted to track my weight in\n        one place. Until this point I had been entering my weight in Google Fit\n        to track my weight, and Cyclotrack so that my weight could be used to\n        help estimate calorie burn on my rides. So I updated Cyclotrack to read\n        all relevant (and available) biometric data from Google Fit. Cyclotrack\n        can get height, weight, and resting heart rate data from Google Fit. It\n        uses this information, and BLE heart rate (if available), to estimate\n        calorie burn. The best part is that this feature is totally optional.\n        Cyclotrack is 100% functional even if you do not use Google Fit.\n        <Spacer height=\"3em\" />\n        <Flexbox\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          marginBetween=\"10px\"\n        >\n          <img width=\"23%\" src={detailsTop} alt=\"logo\" />\n          <img width=\"23%\" src={detailsTwo} alt=\"logo\" />\n          <img width=\"23%\" src={detailsThree} alt=\"logo\" />\n          <img width=\"23%\" src={detailsFour} alt=\"logo\" />\n        </Flexbox>\n        <Spacer height=\"3em\" />\n        <h3>Become a beta tester</h3>\n        <Link\n          color=\"#669e58\"\n          className=\"App-link\"\n          href=\"https://play.google.com/apps/testing/com.kvl.cyclotrack\"\n        >\n          Join beta testing from the web\n        </Link>\n        <Link\n          color=\"#669e58\"\n          className=\"App-link\"\n          href=\"https://play.google.com/store/apps/details?id=com.kvl.cyclotrack\"\n        >\n          Join beta testing from Google Play on Android\n        </Link>\n        <Spacer height=\"2em\" />\n        <RouterLink\n          color=\"#669e58\"\n          className=\"App-link\"\n          to=\"/privacy\"\n          href=\"/privacy\"\n        >\n          View Privacy policy\n        </RouterLink>\n        <Spacer height=\"2em\" />\n      </Flexbox>\n    </Flexbox>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport logo from './cyclotrack-app.svg';\nimport { Flexbox, Text, Link, Icon, Spacer } from 'kvl-react-ui';\nimport { Link as RouterLink } from 'react-router-dom';\n\nfunction Privacy() {\n  return (\n    <Flexbox\n      flexDirection=\"column\"\n      backgroundColor=\"#282c34\"\n      color=\"#eee\"\n      padding=\"1em 1em 0 1em\"\n      height=\"100%\"\n      minHeight=\"100vh\"\n    >\n      <Flexbox flexDirection=\"column\" maxWidth=\"80ch\" height=\"100%\">\n        <RouterLink to=\"/\">\n          <img width=\"20%\" src={logo} alt=\"logo\" />\n        </RouterLink>\n        <Spacer height=\"3em\" />\n        <h3>Privacy Policy</h3>\n        Cyclotrack uses location data from GPS receiver on a user device to\n        visualize speed, distance, and map a route. All data collected by\n        Cyclotrack is stored on the device. No data is transmitted from the\n        device to the developer of Cyclotrack. No data is transmitted to a third\n        party unless you explicitly enable a third party integration (e.g.\n        Google Fit).\n        <h4>Google Fit</h4>A user may choose to link Cyclotrack with a Google\n        Fit account. This is done by signing in to a Google account in\n        Cyclotrack settings. When linked Cyclotrack will:\n        <ul>\n          <li>\n            Read height, weight, and resting heart rate stored in Google Fit.\n            This data will be used to assist in calculating metrics like calorie\n            burn. This data will be stored in Cyclotrack as part of a ride. The\n            data will persist until the ride is deleted from Cyclotrack.\n          </li>\n          <li>\n            Send data to Google Fit to be entered in the activity journal and\n            used to track toward Google Fit goals. These include: location,\n            distance, speed, cadence, and heart rate.\n          </li>\n        </ul>\n        No data received from Google Fit will be shared with or transmitted to\n        any third party.\n        <Spacer height=\"1em\" />\n        <span>\n          <i>\n            <b>Disclosure:</b> Use and transfer to any other app of information\n            received from Google APIs by Cyclotrack will adhere to the{' '}\n            <Link href=\"https://developers.google.com/terms/api-services-user-data-policy\">\n              Google API Services User Data Policy\n            </Link>\n            , including the Limited Use requirements.\n          </i>\n        </span>\n        <Spacer height=\"2em\" />\n      </Flexbox>\n    </Flexbox>\n  );\n}\n\nexport default Privacy;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './Home.js';\nimport Privacy from './Privacy.js';\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/privacy\">\n          <Privacy />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}